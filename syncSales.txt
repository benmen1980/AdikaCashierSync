USE [system]
GO
/****** Object:  StoredProcedure [dbo].[ZKUP_SyncronizeSales3]    Script Date: 11/06/2018 15:49:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



--exec [dbo].[ZKUP_SyncronizeSales] 'hemed'
ALTER PROCEDURE [dbo].[ZKUP_SyncronizeSales3]
	@daysback int = 1
AS
BEGIN
	SET NOCOUNT off;

declare @sqlquery nvarchar(max)
declare @toEnv as varchar(100)
declare @dname as varchar(50);

declare c cursor for
select NAME, KUPENV, DB, LASTSYNCDATE, BOOKNUMID
from system.dbo.ZKUP_KUPOT
where NAME <> '' 
and NAME <> 'HEADOFFICE'
and SYNCFLAG = 'Y';

declare @name as varchar(50), @kupenv as varchar(50);
declare @db as varchar(50), @LASTSYNCDATE as int;
declare @booknumid as varchar(50);

open c;
fetch next from c into @name, @kupenv, @db, @LASTSYNCDATE, @booknumid;

while @@FETCH_STATUS = 0
begin

	print ' ** Begin sync for ' + @name + ' @ ' + coalesce(@db,'');

	set @toEnv = @db;
	set @dname = @kupenv;
	if (coalesce(@toEnv,'') = '')  
	begin
		raiserror('No @toenv',15,1);
		break;
	end

	if (not exists (select name from sys.databases where name = @dname))
	begin
		raiserror('Database %s not found in sys.databasses',15,1, @dname);
		break;
	end
	
	set @LASTSYNCDATE = @LASTSYNCDATE - (24*60 * @daysback); -- 1 day overlap
	
	begin try
	
		print 'Sync from:' + convert(varchar(20), system.dbo.tabula_dateconvert(@LASTSYNCDATE));
  
		begin transaction;

		-- Bills
		print 'Bills:';
		set @sqlquery = 
		'INSERT INTO [' + @dname + '].[dbo].ZKUP_LOADBILLS(BILLNO, CURDATE, IDENTCUSTNAME, CLOSETYPE, CASHIER,CUSTNAME)
		SELECT convert(Varchar(50),fldBill) + ''-'' + convert(varchar,tblSession.fldTerminal) + @booknumid,
		datediff(mi, ''01/01/1988'', fldOpenTime), fldCustomerIdentity, fldCloseMode, fldCashier,@booknumid
		FROM ' + @toEnv + '.[dbo].tblTransBills tblTransBills WITH (NOLOCK)
		inner join ' + @toEnv + '.[dbo].[tblTransMain] tblTransMain WITH (NOLOCK) on tblTransMain.fldSequence = tblTransBills.fldSequence
		inner join ' + @toEnv + '.[dbo].[tblSession] tblSession WITH (NOLOCK) on tblSession.fldSessionID = tblTransMain.fldSessionID
		where tblTransBills.fldCloseMode in (0, 2)
		and fldOpenTime >= dateadd(mi, @LASTSYNCDATE, ''01/01/1988'')'
		;

		exec sp_executesql @sqlquery , N'@LASTSYNCDATE int, @booknumid varchar(50)', 
			@LASTSYNCDATE, @booknumid

		-- Payments
		print 'Payments:';
		set @sqlquery = 
		'INSERT INTO [' + @dname + '].[dbo].ZKUP_LOADBILLS_PAY(BILLNO, LINE, PAYMENTCODE, GROUPPAYMENTCODE, QPRICE, BOOKNUM, BANKCODE, BRANCH, PAYACCOUNT,
		IDNUMBER, PAYDATE, VALIDMONTH, CARDNUM, CREDITCODE, NUMPAY, FIRSTPAY)
		SELECT convert(varchar(50), tblTransBills.fldBill) + ''-'' + convert(varchar,tblSession.fldTerminal) + @booknumid
			  ,[fldLine]
			  ,fldCode  -- use for credit card to get the type of the credit card company
			  ,coalesce([fldPaymeansGroup], 0)  -- 1 cash, 2 cheque, 7 coupon credit, 4 customer credit, 6 credit card, 9 rounding
			  ,tblTransPayments.fldAmount / 100.0
			  ,right(coalesce([fldNumber],''''),16) -- coupon number, cheque
			  ,coalesce([fldBankNumber], '''')
			  ,coalesce([fldBranchNumber], '''')
			  ,case when coalesce([fldPaymeansGroup], 0) = 6 then right(coalesce([fldNumber],''''),4) else left(coalesce([fldAccountNumber], ''''),20) end
			  ,left(coalesce([fldIDNumber], ''''),10)
			  ,datediff(mi, ''01/01/1988'', coalesce([fldPayDate], ''01/01/1988''))
			  ,coalesce(tblDataCreditCards.fldExpDate, '''')
			  ,coalesce(tblDataCreditCards.fldTicketNumber, '''')
			  ,coalesce(tblDataCreditCards.fldCreditType, '''')
			  ,coalesce(tblDataCreditCards.fldInstallments, 0)
			  ,coalesce(tblDataCreditCards.fldFirstInst / 100.0, 0.0)
			  
		  FROM ' + @toEnv + '.[dbo].[tblTransPayments] tblTransPayments WITH (NOLOCK)
		  inner join ' + @toEnv + '.[dbo].[tblTransBills] tblTransBills WITH (NOLOCK) on tblTransBills.fldSequence = tblTransPayments.fldSequence
		  	inner join ' + @toEnv + '.[dbo].[tblTransMain] tblTransMain WITH (NOLOCK) on tblTransMain.fldSequence = tblTransBills.fldSequence
		inner join ' + @toEnv + '.[dbo].[tblSession] tblSession WITH (NOLOCK) on tblSession.fldSessionID = tblTransMain.fldSessionID
		  left outer join ' + @toEnv + '.[dbo].[tblDataCreditCards] tblDataCreditCards WITH (NOLOCK) on tblDataCreditCards.fldBill = tblTransBills.fldBill and tblDataCreditCards.fldCardNumber COLLATE DATABASE_DEFAULT = tblTransPayments.fldNumber COLLATE DATABASE_DEFAULT AND tblTransPayments.fldAmount = tblDataCreditCards.fldAmount
		  where tblTransBills.fldCloseMode in (0, 2)
		  and fldCode <> 22 /* עיגול אגורות */
		  and fldOpenTime >= dateadd(mi, @LASTSYNCDATE, ''01/01/1988'')'
		  ;

	  
		exec sp_executesql @sqlquery , N'@LASTSYNCDATE int, @booknumid varchar(50)', 
			@LASTSYNCDATE, @booknumid

		-- Items
		print 'Items:';
		 set @sqlquery = 
		 'INSERT INTO [' + @dname + '].[dbo].ZKUP_LOADBILLS_PART
		 (BILLNO, LINE, PARTNAME, PRICE, QUANT, QPRICE, DISPRICE, VATFLAG, VAT, FIELDVALUE)
		SELECT  

		 convert(varchar(50),tblTransBills.fldBill) + ''-'' + convert(varchar,tblSession.fldTerminal) + @booknumid
			  ,tblTransSales.[fldLine]
			  ,case when coalesce(PART.PARTNAME,'''') = '''' then convert(varchar(22),tblTransSales.fldCode) else left(PART.PARTNAME,22) end
			  ,[fldPrice] / 100.0
			  ,[fldQty]
			  ,[fldTotal] / 100.0
			  ,[fldNetTotal]  /100.0 -- after line discount and general discount
			  ,[fldVAT]
			  ,[fldVATRate]
			  ,coalesce(tblAddedInputs.fldFieldValue,'''')
		  FROM ' + @toEnv + '.[dbo].[tblTransSales] tblTransSales WITH (NOLOCK)
		  inner join ' + @toEnv + '.[dbo].[tblTransBills] tblTransBills WITH (NOLOCK) on tblTransBills.fldSequence = tblTransSales.fldSequence
		  	inner join ' + @toEnv + '.[dbo].[tblTransMain] tblTransMain WITH (NOLOCK) on tblTransMain.fldSequence = tblTransBills.fldSequence
		inner join ' + @toEnv + '.[dbo].[tblSession] tblSession WITH (NOLOCK) on tblSession.fldSessionID = tblTransMain.fldSessionID
		  left join [' + @dname + '].[dbo].[PART] PART WITH (NOLOCK) on PART.PART = tblTransSales.fldCode
			left join  ' + @toEnv + '.[dbo].[tblTransAddedInputs] tblAddedInputs WITH (NOLOCK) on tblAddedInputs.fldStore = tblTransSales.fldStore and tblAddedInputs.fldSequence = tblTransSales.fldSequence and tblTransSales.fldLine = tblAddedInputs.fldLine
			where tblTransBills.fldCloseMode in (0, 2)
		  and fldOpenTime >= dateadd(mi, @LASTSYNCDATE, ''01/01/1988'')'
		  ;
	 
		exec sp_executesql @sqlquery , N'@LASTSYNCDATE int, @booknumid varchar(50)', 	@LASTSYNCDATE, @booknumid

		
		-- mark giftCard LOADED = G  accoridng to fldType = 9000

		set @sqlquery = '
		
		
		SELECT fldBill as ''bill'',convert(Varchar(50),fldBill) + ''-'' + convert(varchar,tblSession.fldTerminal) + @booknumid as ''bill2''		
		into #myTemp
		FROM ' + @toEnv + '.[dbo].tblTransBills tblTransBills WITH (NOLOCK)
		inner join ' + @toEnv + '.[dbo].[tblTransMain] tblTransMain WITH (NOLOCK) on tblTransMain.fldSequence = tblTransBills.fldSequence
		inner join ' + @toEnv + '.[dbo].[tblSession] tblSession WITH (NOLOCK) on tblSession.fldSessionID = tblTransMain.fldSessionID
		inner join ' + @toEnv + '.[dbo].[tblTranspayments] tblTranspayments WITH (NOLOCK) on tblTransMain.fldSequence = tblTranspayments. fldSequence and tblTranspayments.fldType in (9000,4)
		where tblTransBills.fldCloseMode in (0, 2)
		and fldOpenTime >= dateadd(mi, @LASTSYNCDATE, ''01/01/1988'')
		
		update [' + @dname + '].[dbo].ZKUP_LOADBILLS
		set LOADED =''G'' where BILLNO in (select bill2 from #myTemp )
		DROP TABLE #myTemp
	
	';

	 exec sp_executesql @sqlquery , N'@LASTSYNCDATE int, @booknumid varchar(50)', 	@LASTSYNCDATE, @booknumid

	 -- end giftcard LOADED  set to G end





		-- do not sync 0 value invoices - start

				set @sqlquery = '		
				-- total quant in ainvoice (per part) is 0
				-- total sum in payments is also 0

				update [' + @dname + '].dbo.ZKUP_LOADBILLS
				set LOADED = ''Y'', MESSAGE = ''לא נמכרו פריטים. לכן לא נוצרה חשבונית''
				where LOADED not in (''Y'',''G'') and BILLNO in
				(
				select BILLNO
				from
				(
				select BILLNO
				from [' + @dname + '].dbo.ZKUP_LOADBILLS
				except
				select	BILLNO 
				from [' + @dname + '].dbo.ZKUP_LOADBILLS_PART lbp
				group by BILLNO, PARTNAME
				having sum(QUANT) <> 0
				) baase
					intersect
				-- Total 0 in bills
				select	BILLNO --, sum(QPRICE)
				from	[' + @dname + '].dbo.ZKUP_LOADBILLS_PAY pay
				group by BILLNO
				having   sum(QPRICE) = 0
				union -- no load bills part lines
				select  BILLNO
				from	[' + @dname + '].dbo.ZKUP_LOADBILLS lb
				where	(select count(*) from [' + @dname + '].dbo.ZKUP_LOADBILLS_PART lbp where lbp.BILLNO = lb.BILLNO) = 0
				)
				';

	  	 exec sp_executesql @sqlquery


		 -- do not sync 0 value invoices - end

		-- Update last sync. date
		print 'Update last sync date:';
		update system.dbo.ZKUP_KUPOT
		set	LASTSYNCDATE = datediff(mi,'1/01/1988', getdate()),		
			LASTSALESSYNC = datediff(mi,'1/01/1988', getdate())
		where  NAME = @name and KUPENV = @kupenv;
	
		print 'Commit:';
		commit;

		end try

		begin catch
			if (@@Trancount > 0 ) rollback

			declare @message varchar(max), @error int;
			select @message = ERROR_MESSAGE(), @error = ERROR_NUMBER();
			raiserror('Error number: %d, message : %s',16,1,@error, @message);
		end catch



fetch next from c into @name, @kupenv, @db, @LASTSYNCDATE, @booknumid;

end

close c;
deallocate c;

end




